#!/usr/bin/env node

const svgstore = require('svgstore')
const Promise = require('bluebird')
const { readFileAsync, readdirAsync, writeFileSync } = Promise.promisifyAll(require('fs'))
const path = require('path')

const svgDir = path.resolve(`${__dirname}/../_svgs`)

readdirAsync(svgDir)
  .then(files => files.filter(file => path.extname(file) === '.svg'))
  .then((svgs) => {
    const svgPaths = svgs.map(svg => `${svgDir}/${svg}`)
    return Promise.map(svgPaths, (svgPath) => readFileAsync(svgPath, 'utf8')
        .then(data => ({ id: path.basename(svgPath, '.svg'), data }))
      )
      .then(readSvgs => {
        const svgSprite = svgstore()
        readSvgs.forEach(({ id, data }) => { svgSprite.add(id, data) })
        const targetPath = path.resolve('_includes/sprite.svg')
        writeFileSync(targetPath, svgSprite)
      })
  })
